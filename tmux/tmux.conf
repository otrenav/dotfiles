unbind C-b
set -g prefix C-Space

set -g mouse on
set -g base-index 1
set -s escape-time 10
set -g wrap-search off
set -g allow-rename off
set -g pane-base-index 1
set -g visual-activity on
set -g renumber-windows on
set -g history-limit 10000
set -g default-terminal "screen-256color"
setw -g monitor-activity on

bind C-Space last-window
bind t split-window -h "vim ~/drive/personal/shared/TODO.md"
bind s command-prompt -p "send-keys: " "send-keys -t right '%%' C-m"
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Panes
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind M-0 select-layout even-horizontal
bind M-) select-layout even-vertical
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Status bar
set -g status-bg black
set -g status-fg white
set -g status-right "omartrejo.com "

set -g window-status-style bg=default,fg=cyan,dim
set -g window-status-current-style bg=black,fg=white

# TODO: From here to end...

# Vim-like
set -w -g mode-keys vi
# set -g status-keys vi
# bind -t vi-copy v begin-selection
# smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind -T edit-mode-vi Up send-keys -X history-up
# bind -T edit-mode-vi Down send-keys -X history-down
# unbind -T copy-mode-vi Space   ;  bind -T copy-mode-vi v send-keys -X begin-selection
# unbind -T copy-mode-vi Enter   ;  bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# unbind -T copy-mode-vi C-v    ;  bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
# unbind -T copy-mode-vi [     ;  bind -T copy-mode-vi [ send-keys -X begin-selection
# unbind -T copy-mode-vi ]     ;  bind -T copy-mode-vi ] send-keys -X copy-selection
# bind -T copy-mode-vi WheelUpPane send-keys -X scroll-up
# bind -T copy-mode-vi WheelDownPane send-keys -X scroll-down
# unbind -T copy-mode-vi MouseDragEnd1Pane
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1
# bind-key -n S-Right next-window
# bind-key -n S-Left previous-window

# Function                vim            emacs
# Back to indentation     ^              M-m
# Clear selection         Escape         C-g
# Copy selection          Enter          M-w
# Cursor down             j              Down
# Cursor left             h              Left
# Cursor right            l              Right
# Cursor to bottom line   L
# Cursor to middle line   M              M-r
# Cursor to top line      H              M-R
# Cursor up               k              Up
# Delete entire line      d              C-u
# Delete to end of line   D              C-k
# End of line             $              C-e
# Goto line               :              g
# Half page down          C-d            M-Down
# Half page up            C-u            M-Up
# Next page               C-f            Page down
# Next word               w              M-f
# Paste buffer            p              C-y
# Previous page           C-b            Page up
# Previous word           b              M-b
# Quit mode               q              Escape
# Scroll down             C-Down or J    C-Down
# Scroll up               C-Up or K      C-Up
# Search again            n              n
# Search backward         ?              C-r
# Search forward          /              C-s
# Start of line           0              C-a
# Start selection         Space          C-Space
# Transpose chars                        C-t

# Reload
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# Other option: rebind copy/paste keys
# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

# System clipboard (requires `xclip` installed)
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# bind C-v run "tmux set-buffer |"$(xclip -o -sel clipboard)\"; tmux paste buffer"
