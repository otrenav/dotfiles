export ZSH=$HOME/.oh-my-zsh
unsetopt share_history
DISABLE_AUTO_TITLE="true"
CASE_SENSITIVE="true"
ZSH_THEME="elessar"
plugins=(
    virtualenvwrapper
    command-time
    kubectl
    docker
    gcloud
    git
    ng
)
export VISUAL=emacs
export EDITOR="$VISUAL"
export LANG=en_US.UTF-8
source $ZSH/oh-my-zsh.sh
source ~/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
export PATH="$PATH:$HOME/.cargo/bin"

PDF_VIEWER=evince
DIR_BASE="/home/otrenav"
DIR_PROJECTS="$DIR_BASE/projects"
DIR_DOWNLOADS="$DIR_BASE/downloads"
DIR_PDFS="$DIR_BASE/drive/personal/knowledge"
DIR_DOTFILES="$DIR_BASE/projects/system/dotfiles"
DIR_SCRIPTS="$DIR_BASE/projects/system/dotfiles/scripts"
DIR_NOTES="$DIR_BASE/projects/notes"
DIR_BLOG="$DIR_BASE/projects/blog"
C="$DIR_BASE/projects/blog"

# Add "~/.scripts" and all subdirectories to $PATH
export PATH="$PATH:$(du "$DIR_SCRIPTS" | cut -f2 | tr "\n" ":" | sed "s/:*$//")"

alias g="git"
alias e="exit"
alias won="workon"
alias ka="killall"
alias t="./test.sh"
alias s="./server.sh"
alias disk_usage="du -sh"
alias d="cd $DIR_DOWNLOADS; ls;"
alias double_click="xdg-open"
alias ports="netstat -tulpn"
alias grep="grep --color=auto"
alias reload="source ~/.zshrc"
alias zconf="$EDITOR ~/.zshrc"
alias econf="$EDITOR ~/.spacemacs"
alias iconf="$EDITOR $DIR_DOTFILES/install.sh"
alias gg="grep --color=auto -rnwi . -e"
alias ccat="highlight --out-format=ansi"
alias file_count="find . -type f | wc -l"
alias ls="ls -lGF --color=auto -lh -hN --group-directories-first"
alias lsall="ls -flaF --color=auto -lh -hN --group-directories-first"

# Python
alias kp="killall python"
alias pyclean="find . -name '*.py[co]' -o -name __pycache__ -exec rm -rf {} +"
export WORKON_HOME=~/projects/system/python/
source /usr/local/bin/virtualenvwrapper.sh

# R
alias R="R --no-save"
alias r="R --no-save"
export R_PROFILE_USER="~/projects/system/dotfiles/r/Rprofile"

# kubectl
alias k="kubectl"

# Functions
function file_directory_size() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh
    else
        local arg=-sh
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@"
    else
        du $arg .[^.]* *
    fi
}

function show_keys() {
    gpg $1
    fl=$(echo $1 | sed "s/\.[^.]*$//")
    more "${fl}"
    rm "${fl}"
}

# Fuzzy matching
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--extended --layout=reverse --height=40%"
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_ALT_C_COMMAND="fd --type d ."

# Command-time
ZSH_COMMAND_TIME_MSG="\n[Execution time: %s] \n \n"

# Disable C-s and C-q for pausing terminal
stty -ixon

# Easily edit files
f() {
    fname="$(find \
        $DIR_SCRIPTS \
        $DIR_DOTFILES/python \
        $DIR_DOTFILES/git \
        $DIR_DOTFILES/js \
        $DIR_DOTFILES/r \
        $DIR_NOTES \
        $DIR_BLOG \
    -type f -exec du -a {} \; \
    | cut -f2 \
    | sed -e "s|$DIR_BASE|~|" \
    | sed "/\~$/d" \
    | fzf \
    | sed -e "s|~|$DIR_BASE|" \
    )"
    if [ ! -z "$fname" ]; then
        $EDITOR "$fname"
    fi
}

# Easily open PDFs
p() {
    $PDF_VIEWER "$DIR_PDFS$(du -a $DIR_PDFS | cut -f2 | grep .pdf | sed -e "s|$DIR_PDFS||" | fzf)"
}

#
# Node Version Manager (NVM)
#
export NVM_DIR="$HOME/.nvm"
load_nvm() {
    echo "Loading NVM..."
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    echo "DONE."
}
